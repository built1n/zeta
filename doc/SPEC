SPEC
 Created on: Mar 3, 2014
     Author: Franklin Wei
Zeta is a 32-bit, accumulator-based virtual machine.
Instructions consist of a one-byte opcode, and a 32-bit big-endian operand.
All instructions are 5 bytes long, except for extended instructions, which are six bytes.

Main instruction set:
0x00 - NOP
0x01 - LOAD
0x02 - STORE
0x03 - JMP
0x04 - DSE
 - Decrement accumulator, skip next instruction if it matches argument
0x05 - SK
 - Skip next instruction if accumulator matches argument
0x06 - CALL
0x07 - RET
0x08 - PUSH
 - Argument ignored
0x09 - PUSHX
0x0A - POP
0x0B - See extended instruction set

Extended instructions consist of the 0x0B byte, the extended instruction specifier, and a four-byte argument
Bit 7 of the extended instruction specifier specifies whether to treat the argument as a pointer
Set = pointer, not set = explicit value

Extended instruction set:
0x00 - LOADX
0x01 - OR
0x02 - NOT
0x03 - AND
0x04 - ADD
0x05 - SUB
0x06 - MUL
0x07 - DIV
0x08 - INCR 
 - Argument ignored
0x09 - DECR
 - Argument ignored
0x0A - HLT
 - Return the argument as a signed integer
0x0B - PRINT
 - Print accumulator contents
 - Argument = 0
   - Decimal
 - Argument = 1
   - Lowercase hex, no "0x"
 - Argument = 2
   - Uppercase hex, no "0X"
 - Argument = 4
   - Binary
0x0C - PUTS
 - Print zero-terminated string specified by argument
 - If 7th bit is set, location is specified by accumulator
0x0D - DBG [unimplemented]
 - Toggle debug mode
 - In debug mode, each instruction executed is detailed in this format:
   [Executing instruction 0x?? at 0x????????]
   Argument: 0x????????
   Accumulator: 0x????????
 - Values printed are those AFTER execution

